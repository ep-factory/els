<?php

/**
 * Category
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    els
 * @subpackage model
 * @author     Vincent CHALAMON <vincentchalamon@gmail.com>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
class Category extends BaseCategory {

  /**
   * Render category to string
   *
   * @return string Category to string
   */
  public function __toString() {
    return $this->getName()." (".$this->getCode().")";
  }

  /**
   * Count current category fiches
   * 
   * @return integer Number
   */
  public function getCountFiches($resolved = null, $finished = null) {
    if(!isset($this->_values['count_fiches'])) {
      $query = FicheTable::getInstance()->createQuery('fiche')
                      ->where('fiche.category_id = ?', $this->getPrimaryKey())
                      ->innerJoin('fiche.CaseCode case_code')
                      ->innerJoin('fiche.Category category')
                      ->andWhere('fiche.deleted_at IS NULL')
                      ->andWhere('fiche.is_finished = ?', !is_null($finished) ? true : false);
      if(!is_null($resolved)) {
        $query->andWhere('fiche.is_resolved = ?', $resolved);
      }
      $this->_values['count_fiches'] = $query->count();
    }
    return $this->_values['count_fiches'];
  }

  /**
   * Retrieve last fiches for current category
   * 
   * @param integer $limit Query limit
   * @return Doctrine_Collection Fiches
   */
  public function getLimitedFiches($limit = 10, $resolved = null, $finished = null) {
    if(!isset($this->_values['limited_fiches'])) {
      $query = FicheTable::getInstance()->createQuery('fiche')
                      ->where('fiche.category_id = ?', $this->getPrimaryKey())
                      ->innerJoin('fiche.CaseCode case_code')
                      ->innerJoin('fiche.Category category')
                      ->andWhere('fiche.deleted_at IS NULL')
                      ->andWhere('fiche.is_finished = ?', !is_null($finished) ? true : false)
                      ->limit($limit)
                      ->orderBy('fiche.fiche_date DESC');
      if(!is_null($resolved)) {
        $query->andWhere('fiche.is_resolved = ?', $resolved);
      }
      $this->_values['limited_fiches'] = $query->execute();
    }
    return $this->_values['limited_fiches'];
  }

}
